@using ShmffPortal.Helpers
@model ShmffPortal.Models.LoginViewModel
@using ShmffPortal.BLL

@{
    ViewBag.Title = "دخول مستخدم حالي";
    Layout = "~/Views/Shared/_NewDesignLayout.cshtml";

}

<style>
    .box-static.box-border-top {
        border-color: #8ab933;
    }

    .box-static.box-border-top {
        border-top: rgba(0,0,0,0.5) 3px solid;
    }

    .box-static {
        text-align: right;
    }

    .box-static {
        padding: 15px;
        background-color: rgba(0,0,0,0.05);
        border-top: transparent 3px solid;
        border-radius: 3px;
        -moz-border-radius: 3px;
        -webkit-border-radius: 3px;
    }

    .p-30 {
        padding: 30px !important;
    }
</style>
<script src="~/Scripts/jquery-1.11.3.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $("#Password").keypress(function (e) {
            debugger
            var unicode = e.charCode ? e.charCode : e.keyCode
            if (unicode != 8) { //if the key isn't the backspace key (which we should allow)
                if (unicode == 32)
                    return false;
                else {
                    if ((unicode < 48 || unicode > 57) && (unicode < 0x0600 || unicode > 0x06FF)) //if not a number or arabic
                        return true; //disable key press
                }
            }
            var charCode = (e.which) ? e.which : e.keyCode;
            if (charCode > 31 && (charCode < 48 || charCode > 57)) {
                return false;
            }
            else {
                return true;
            }
            return true;
        });
    })
</script>


<main id="main">
    <!-- ======= Breadcrumbs ======= -->
    <div class="breadcrumbs" data-aos="fade-in">
        <div class="container">
            <h2>دخول مستخدم حالي</h2>
        </div>
    </div><!-- End Breadcrumbs -->
</main>
<br />

<div class="row">
    <div class="col-md-6">
        <div class="box-static box-border-top p-30">
            <div class="box-title mb-30">
                <h2 class="fs-20">دخول مستخدم حالي</h2>
            </div>
            @{ Html.BeginForm("Login", "Account", FormMethod.Post, new { enctype = "multipart/form-data", @class = "formLgoin" });
                @Html.AntiForgeryToken()
            }
            <div class="clearfix">
                <div class="row">
                    <div class="col-md-6 col-sm-6 col-xs-6 text-center">
                        <div id="SSNError" class="alert alert-danger" style="@(TempData["Error"]==null?"display:none":"display:block")">
                            @TempData["Error"]
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <label class="label ">الرقم القومي</label>
                    @Html.TextBoxFor(m => m.SSN, new { id = "SSNTEXT", @class = "form-control", @placeholder = "الرقم القومي" })
                    @Html.ValidationMessageFor(model => model.SSN, "", new { @class = "text-danger" })
                    <div class="help-block with-errors" style="color :red"></div>
                </div>

                <div class="form-group">
                    <label class="label ">كلمة المرور</label>
                    @Html.PasswordFor(m => m.password, new { id = "Password", @class = "form-control", @placeholder = "كلمة المرور" })
                    <span toggle="#password" class="fa fa-fw fa-eye field-icon toggle-password" style="margin-left: 5px;"></span>
                    <div class="help-block with-errors" style="color :red"></div>
                </div>

                @*<div class="row">
                    <div class="col-md-6 col-sm-6 col-xs-6 text-centre">

                        @Html.GoogleCaptcha()
                        @Html.InvalidGoogleCaptchaLabel("Captcha is not valid !")
                    </div>
                </div>*@
                <div class="row">
                    <div class="col-md-3 col-sm-6 col-xs-6 text-right">
                        <input type="submit" class="btn btn-success button_save ml-3" style="color:white;" name="Result" onclick="return validateSNN();" value="دخول" />
                        @*<button type="submit" class="btn btn-primary" id="submitBtn">الدخول</button>*@
                    </div>

                  

                    <div class="col-md-8 col-sm-6 col-xs-6 text-center">
                        <div class="form-tip pt-10">
                            <a style="font-weight: bold;" href="~/Account/ForgotPassword">نسيت كلمة المرور؟</a>
                        </div>
                    </div>
                </div>
            </div>
            @{ Html.EndForm(); }
        </div>
    </div>
</div>


@*<div class="contact-box-main">
    <div class="container" style="background-color: #30313117; width: 560px;height: 400px;padding-top:34px">
        <div class="row">
            <div class="col-lg-8 col-sm-12">
                @{ Html.BeginForm("Login", "Account", FormMethod.Post, new { enctype = "multipart/form-data" });
                    @Html.AntiForgeryToken()
                }
                <div id="SSNError" class="alert alert-danger" style="@(TempData["Error"]==null?"display:none":"display:block")">
                    @TempData["Error"]
                </div>

                <div class="alert alert-success" style="@(TempData["Success"]==null?"display:none":"display:block")">
                    @TempData["Success"]
                </div>
                <div class="form-group">
                    <label for="snnInput">الرقم القومي لصاحب الطلب</label>
                    @Html.TextBoxFor(m => m.SSN, new { id = "SSNTEXT", @class = "form-control", @placeholder = "الرقم القومي" })
                    @Html.ValidationMessageFor(model => model.SSN, "", new { @class = "text-danger" })


                    <div class="alert alert-danger" style="@(@ViewBag.SSNError==null?"display:none":"display:block")">
                        @ViewBag.SSNError
                    </div>
                    <div class="alert alert-danger" style="@(@TempData["SSNError"]==null?"display:none":"display:block")">
                        @TempData["SSNError"]
                    </div>
                </div>

                <div class="form-group">
                    <label for="snnInput">كلمة المرور</label>
                    @Html.PasswordFor(m => m.password, new { id = "Password", @class = "form-control", @placeholder = "كلمة المرور" })
                    <div>
                        @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                    </div>
                    @Html.HiddenFor(m=>m.GoogleCaptchToken)
                    </div>

                    <div class="row">
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                @Html.GoogleCaptcha()
                                @Html.InvalidGoogleCaptchaLabel("خطأ في رمز التحقق او لم يتم الاختيار!")
                            </div>
                        </div>
                    </div>

                    @*<div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <div class="g-recaptcha" data-sitekey="6LemMf4ZAAAAAPO4o1cJ0-tiUqF68xkvV-Jbm9B0"></div>
                            </div>
                        </div>
                    <div class="form-group row">
                        <a href="~/Account/ForgotPassword" style="color:red;">هل نسيت كلمة المرور؟</a>
                    </div>
                    <input type="submit" class="btn btn-success" name="Result" onclick="return validateSNN();" value="دخول" />
                    @*<a href="~/Account/Register" class="btn btn-primary">التسجيل</a>
                    @{ Html.EndForm(); }
                    </div>
                    </div>
                    </div>
                    </div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @*<script src="https://www.google.com/recaptcha/api.js?render=6LemMf4ZAAAAAPO4o1cJ0-tiUqF68xkvV-Jbm9B0"></script>
        <script>
                grecaptcha.ready(function () {
                    grecaptcha.execute('6LemMf4ZAAAAAPO4o1cJ0-tiUqF68xkvV-Jbm9B0', { action: 'login' }).then(function (token) {
                        // document.getElementById("foo").value = token;
                        $('#GoogleCaptchToken').val(token);
                    });
                });
        </script>*@

    <script src="~/Scripts/ValidateSSN.js" type="text/javascript"></script>
    <script type="text/javascript">
        function clearValidation() {
            $('#SSNError').attr('style', 'display:none');
            $('#QuestionError').attr('style', 'display:none');
        }
        $("body").on("submit", "#send_btn", function () {
            return confirm("Do you want to submit?");
        });

        function validateSNN() {
            debugger
            if ($('#SSNTEXT').val() == "") {
                var snn = isValidSSN($('#SSN_hid').val());
                if (!snn) {
                    $('#SSNError').html('برجاء إدخال رقم بطاقة صحيح');
                    $('#SSNError').attr('style', 'display:block');
                }
            }
            else {
                var sNNResult = isValidSSN($('#SSNTEXT').val());

                if (!sNNResult) {

                    $('#SSNError').html('برجاء إدخال رقم بطاقة صحيح');
                    $('#SSNError').attr('style', 'display:block');
                }
            }
            return sNNResult;
        }
        function validateQuestion() {

            var questionResult = $('#Question').val().trim().length > 0;
            if (!questionResult) {
                $('#QuestionError').html('برجاء إدخال السؤال');
                $('#QuestionError').attr('style', 'display:block');
            }

            return questionResult;
        }
        function validate() {
            clearValidation();
            return validateSNN();
        }

        function validateSend() {
            clearValidation();
            var s = validateSNN();
            var q = validateQuestion();
            return s && q;
        }
    </script>
}
